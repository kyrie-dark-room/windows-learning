#pragma once
/*
------------------------------------------------------------------------------------------------------
|											指针的初始化                                             |
------------------------------------------------------------------------------------------------------
|     1) int *p1 = nullptr;  // 可以被转换成任意其他类型的指针类型，新标准推荐使用，避免使用NULL     |
|	  2) int *p2 = 0;																				 |
|	  3) int *p3 = NULL;																			 |
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
											常量的多文件共享
------------------------------------------------------------------------------------------------------
    默认情况下，const对象被设定为仅在文件内有效。当多个文件中出现了同名的const变量时，其实等同于在不同
文件中分别定义了独立的变量。如果想在多个文件之间共享const对象，必须在变量的定义之前添加extern关键字。
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
												类型别名
------------------------------------------------------------------------------------------------------
	  1) 传统的方法使用关键字typedef
		typedef double wages;
	  2) 新标准规定了一种新的方法，使用别名声明来定义类型的别名
		using SI= Sales_item;
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
												decltype
------------------------------------------------------------------------------------------------------
	  1) decltype((i)) d;   // 错误：d是int&，必须初始化
	  2) decltype(i) e;     // 正确：e是一个（未初始化的）int
	  切记：decltype((variable))的结果永远是引用，而decltype(variable)结果只有当variable本身就是一个引
	  用时才是引用。
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
												头文件保护符
------------------------------------------------------------------------------------------------------
	  #ifndef INITIALIZE_BY_TYPE
	  #define INITIALIZE_BY_TYPE
	  #endif
------------------------------------------------------------------------------------------------------
*/