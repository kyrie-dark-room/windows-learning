#pragma once
// C++标准规定的尺寸的最小值
/*
――――――――――――――――――――――――――――――――――――――――――――――――――
|                                      C++：算数类                                                              |
――――――――――――――――――――――――――――――――――――――――――――――――――
| 类型                            含义                               最小尺寸                       |
----------------------------------------------------------------------------------------------------
| bool                            布尔类型                           未定义                         |
| char                            字符                               8 位                           |
| wchar_t                         宽字符                             16 位                          |
| char16_t                        Unicode字符                        16 位                          |
| char32_t                        Unicode字符                        32 位                          |
| short                           短整形                             16 位                          |
| int                             整形                               16 位                          |
| long                            长整形                             32 位                          |
| long long                       长整形                             64 位                          |
| float                           单精度浮点数                       6 位有效数字                   |
| double                          双精度浮点数                       10 位有效数字                  |
| long double                     扩展精度浮点数                     10 位有效数字                  |
――――――――――――――――――――――――――――――――――――――――――――――――――
*/

/*
	以下是选择类型的一些经验准则
	(1) 当明确知晓数值不可能为负时，选用无符号类型。
	(2) 使用int执行整数运算。如果数值超过了int的范围，选用long long。
	(3) 字符型有三种：char、signed char和unsigned char，但是字符的表现形式只有两种：带符号和不带符号。
        类型char实际上会表现哪一种由编译器决定。
	(4) 执行浮点数运算选用double，这是因为fload精度不够切计算代价和double相差无几，甚至某些机器上，双精度还要快些。
	(5) 切勿混用带符号类型和无符号类型。当带符号类型取值为负时会出现异常结果，因为带符号数会自动转换为无符号数。
*/

// 指定字面值的类型
/*
――――――――――――――――――――――――――――――――――――――――――――――――――
|                                      字符串和字符串字面值                                                              |
――――――――――――――――――――――――――――――――――――――――――――――――――
| 前缀                            含义                               类型                          |
----------------------------------------------------------------------------------------------------
| u                               Unicode 16 字符                    char16_t                      |
| U                               Unicode 32 字符                    char32_t                      |
| L                               宽字符                             wchar_t                       |
| u8                              UTF-8（仅用于字符串字面常量）      char                          |
――――――――――――――――――――――――――――――――――――――――――――――――――

――――――――――――――――――――――――――――――――――――――――――――――――――
|                                      整形字面值                                                              |
――――――――――――――――――――――――――――――――――――――――――――――――――
| 前缀                            最小匹配类型                                                     |
----------------------------------------------------------------------------------------------------
| u or U                          unsigned                                                         |
| l or L                          long                                                             |
| ll or long                      long long                                                        |
――――――――――――――――――――――――――――――――――――――――――――――――――

――――――――――――――――――――――――――――――――――――――――――――――――――
|                                      浮点型字面值                                                              |
――――――――――――――――――――――――――――――――――――――――――――――――――
| 前缀                            最小匹配类型                                                     |
----------------------------------------------------------------------------------------------------
| f or F                          float                                                            |
| l or L                          long double                                                      |       |
――――――――――――――――――――――――――――――――――――――――――――――――――
*/

/*
	(1).编译器再每个字符串的结尾处添加一个空字符（'\0'）。
	(2).如果两个字符串字面值位置紧邻且仅由空格、缩进和换行符分隔。
*/


 